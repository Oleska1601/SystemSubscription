{
    "swagger": "2.0",
    "info": {
        "description": "API for Golang Project System of Subscriptions",
        "title": "System Of Subscriptions API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/activate-subscription": {
            "post": {
                "description": "add subscription if paymentToken has not been expired",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "post page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "paymentToken",
                        "name": "paymentToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.PaymentToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "subscriptionID",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "activate subscription is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "not authorised or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "token has been expired or payment token has been expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error of getting payment or error of updating payment or error of adding subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/choose-subscription/{user_id}": {
            "post": {
                "description": "choose subscriptionType and get paymentToken if last subscription is not active",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "post page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": " ID, TypeName, Duration, Price",
                        "name": "subscription_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SubscriptionType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "paymentToken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "choose subscription is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "not authorised or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "token has been expired or current subscription is active",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error of getting last subscription or error of adding payment",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/last-subscription/{user_id}": {
            "get": {
                "description": "get last subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription"
                ],
                "summary": "get page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Subscription"
                        }
                    },
                    "400": {
                        "description": "get last subscription is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "not authorised or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "token has been expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error of getting last subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/news/{user_id}": {
            "get": {
                "description": "get news if last subscription is active",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "get page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.News"
                        }
                    },
                    "400": {
                        "description": "get news is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "not authorised or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "token has been expired or current subscription is not active",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error of getting last subscription",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/subscription-types": {
            "get": {
                "description": "get subscriptionTypes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptionTypes"
                ],
                "summary": "get subscriptionTypes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token for authentification",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.SubscriptionType"
                            }
                        }
                    },
                    "401": {
                        "description": "not authorised or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "token has been expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error of getting subscription types",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login by login and password",
                "tags": [
                    "users"
                ],
                "summary": "login page",
                "parameters": [
                    {
                        "description": "Login, Password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "login is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error with login or incorrect login or password or login is impossible",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "register by login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "register page",
                "parameters": [
                    {
                        "description": "Login, Password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Credentials"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "register successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "register is impossible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error with register or incorrect login or password",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Credentials": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "user"
                },
                "password": {
                    "type": "string",
                    "example": "qwerty"
                }
            }
        },
        "entity.News": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "news"
                }
            }
        },
        "entity.PaymentToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "entity.Subscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "2006-01-02T15:04:06Z"
                },
                "start_date": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "status": {
                    "description": "active or not active",
                    "type": "string",
                    "example": "active"
                },
                "subscription_id": {
                    "type": "integer",
                    "example": 1
                },
                "subscription_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entity.SubscriptionType": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "1/3/6/12",
                    "type": "integer",
                    "example": 1
                },
                "price": {
                    "type": "integer",
                    "example": 10
                },
                "subscription_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "type_name": {
                    "type": "string",
                    "example": "1 second"
                }
            }
        }
    }
}