basePath: /
definitions:
  entity.Credentials:
    properties:
      login:
        example: user
        type: string
      password:
        example: qwerty
        type: string
    type: object
  entity.News:
    properties:
      message:
        example: news
        type: string
    type: object
  entity.PaymentToken:
    properties:
      token:
        type: string
    type: object
  entity.SubscriptionInfo:
    properties:
      end_date:
        example: "2006-01-02T15:04:06Z"
        type: string
      start_date:
        example: "2006-01-02T15:04:05Z"
        type: string
      subscription_id:
        example: 1
        type: integer
      subscription_status:
        description: 1-active, 0-not active
        example: 1
        type: integer
      'subscription_type_name:':
        example: 1 second
        type: string
    type: object
  entity.SubscriptionType:
    properties:
      duration:
        description: 1/3/6/12
        example: 1
        type: integer
      price:
        example: 10
        type: integer
      subscription_type_id:
        example: 1
        type: integer
      type_name:
        example: 1 second
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for Golang Project System of Subscriptions
  termsOfService: http://swagger.io/terms/
  title: System Of Subscriptions API
  version: "1.0"
paths:
  /api/activate-subscription:
    post:
      consumes:
      - application/json
      description: add subscription if paymentToken has not been expired
      parameters:
      - description: jwt token for authentification
        in: header
        name: token
        required: true
        type: string
      - description: paymentToken
        in: body
        name: paymentToken
        required: true
        schema:
          $ref: '#/definitions/entity.PaymentToken'
      produces:
      - application/json
      responses:
        "200":
          description: subscriptionID
          schema:
            type: int
        "400":
          description: activate subscription is impossible
          schema:
            type: string
        "401":
          description: not authorised or invalid token
          schema:
            type: string
        "403":
          description: token has been expired
          schema:
            type: string
        "500":
          description: error of activating subscription
          schema:
            type: string
      summary: post page
      tags:
      - subscription
  /api/last-subscription-info:
    get:
      consumes:
      - application/json
      description: get last subscription info
      parameters:
      - description: jwt token for authentification
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.SubscriptionInfo'
        "400":
          description: get last subscription info is impossible
          schema:
            type: string
        "401":
          description: not authorised or invalid token
          schema:
            type: string
        "403":
          description: token has been expired
          schema:
            type: string
        "500":
          description: error of getting last subscription info
          schema:
            type: string
      summary: get page
      tags:
      - subscription
  /api/news:
    get:
      consumes:
      - application/json
      description: get news if last subscription is active
      parameters:
      - description: jwt token for authentification
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.News'
        "400":
          description: get news is impossible
          schema:
            type: string
        "401":
          description: not authorised or invalid token
          schema:
            type: string
        "403":
          description: token has been expired or current subscription is not active
          schema:
            type: string
        "500":
          description: error of getting news
          schema:
            type: string
      summary: get page
      tags:
      - news
  /api/set-new-subscription:
    post:
      consumes:
      - application/json
      description: choose subscriptionType and get paymentToken if last subscription
        is not active
      parameters:
      - description: jwt token for authentification
        in: header
        name: token
        required: true
        type: string
      - description: ' ID, TypeName, Duration, Price'
        in: body
        name: subscription_type
        required: true
        schema:
          $ref: '#/definitions/entity.SubscriptionType'
      produces:
      - application/json
      responses:
        "200":
          description: paymentToken
          schema:
            type: string
        "400":
          description: set new subscription is impossible
          schema:
            type: string
        "401":
          description: not authorised or invalid token
          schema:
            type: string
        "403":
          description: token has been expired
          schema:
            type: string
        "500":
          description: error of setting new subscription
          schema:
            type: string
      summary: post page
      tags:
      - subscription
  /api/subscription-types:
    get:
      consumes:
      - application/json
      description: get subscriptionTypes
      parameters:
      - description: jwt token for authentification
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.SubscriptionType'
            type: array
        "401":
          description: not authorised or invalid token
          schema:
            type: string
        "403":
          description: token has been expired
          schema:
            type: string
        "500":
          description: error of getting subscription types
          schema:
            type: string
      summary: get subscriptionTypes
      tags:
      - subscriptionTypes
  /login:
    post:
      description: login by login and password
      parameters:
      - description: Login, Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.Credentials'
      responses:
        "200":
          description: login successful
          schema:
            type: string
        "400":
          description: login is impossible
          schema:
            type: string
        "500":
          description: error with login or incorrect login or password or login is
            impossible
          schema:
            type: string
      summary: login page
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: register by login and password
      parameters:
      - description: Login, Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.Credentials'
      produces:
      - application/json
      responses:
        "201":
          description: register successful
          schema:
            type: string
        "400":
          description: register is impossible
          schema:
            type: string
        "500":
          description: error with register or incorrect login or password
          schema:
            type: string
      summary: register page
      tags:
      - users
swagger: "2.0"
